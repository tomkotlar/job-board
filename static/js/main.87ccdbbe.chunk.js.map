{"version":3,"sources":["Components/SingleJob/SingleJob.js","Components/JobList/JobsList.js","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["SingleJob","job","React","useState","open","setOpen","Card","Group","color","Content","Image","floated","size","src","company_logo","Header","as","title","Meta","Icon","name","company","location","Description","Date","created_at","toLocaleDateString","extra","className","Modal","trigger","Button","basic","onClick","onClose","closeIcon","image","scrolling","wrapped","spaced","dangerouslySetInnerHTML","__html","description","Actions","href","url","inverted","JobsList","vacancies","Fragment","Grid","stackable","columns","map","index","key","SearchBox","placeholder","handleSearch","Segment","padded","icon","Inline","type","onChange","api","App","state","error","vacanciesList","searchPosition","event","setState","target","value","fetch","response","console","log","json","jobList","this","filterJobs","filter","toLowerCase","includes","length","Dimmer","active","Loader","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87ccdbbe.chunk.js","sourcesContent":["import React from \"react\"\nimport { Button, Card, Image, Icon, Modal, Header } from \"semantic-ui-react\"\n\nexport const SingleJob = ({ job }) => {\n  const [open, setOpen] = React.useState(false)\n  function handleOpen() {\n    setOpen(true)\n  }\n  function handleClose() {\n    setOpen(false)\n  }\n\n  return (\n    <Card.Group>\n      <Card color=\"grey\">\n        <Card.Content>\n          <Image floated=\"right\" size=\"mini\" src={job.company_logo} />\n          <Card.Header as=\"h5\">{job.title}</Card.Header>\n          <Card.Meta>\n            <Icon name=\"chess rook\" />\n            <strong> {job.company}</strong>\n          </Card.Meta>\n          <Card.Meta>\n            <Icon name=\"map pin\" />\n            {job.location}\n          </Card.Meta>\n          <Card.Description>\n           \n          </Card.Description>\n          <Card.Meta > <Icon name=\"calendar alternate\" />{new Date(job.created_at).toLocaleDateString()}</Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <div className=\"ui two buttons\">\n            <Modal\n              trigger={\n                <Button basic color=\"green\" onClick={handleOpen}>\n                  More\n                </Button>\n              }\n              open={open}\n              onClose={handleClose}\n              basic\n              closeIcon\n            >\n              <Modal.Header>{job.company}</Modal.Header>\n\n              <Modal.Content image scrolling>\n                <Image wrapped size=\"small\" src={job.company_logo} spaced />\n\n                <Modal.Description>\n                  <Header as=\"h4\" color=\"blue\">\n                    {job.title}\n                  </Header>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: job.description\n                    }}\n                  ></div>\n                </Modal.Description>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button color=\"red\" as=\"a\" href={job.url} inverted>\n                  Proceed <Icon name=\"right chevron\" />\n                </Button>\n              </Modal.Actions>\n            </Modal>\n\n            <Button basic color=\"red\" as=\"a\" href={job.url}>\n              Apply\n            </Button>\n          </div>\n        </Card.Content>\n      </Card>\n    </Card.Group>\n  )\n}\n","import React from \"react\"\nimport { SingleJob } from \"../SingleJob/SingleJob\"\nimport { Grid } from \"semantic-ui-react\"\n\nconst JobsList = ({ vacancies }) => {\n  return (\n    <React.Fragment>\n      <Grid stackable columns={6}>\n        {vacancies.map((job, index) => (\n          <SingleJob key={index} job={job} />\n        ))}\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport { JobsList }\n","import React from \"react\"\nimport { Icon, Header, Segment } from \"semantic-ui-react\"\nimport \"../SearchBox/SearBox.css\"\n\nexport const SearchBox = ({ placeholder, handleSearch }) => {\n  return (\n    <Segment placeholder padded>\n      <Header icon>\n        <Icon name=\"search\" />\n        Looking for Dev Jobs\n      </Header>\n      <Segment.Inline>\n        <input\n          className=\"search\"\n          type=\"search\"\n          placeholder={placeholder}\n          onChange={handleSearch}\n        />\n      </Segment.Inline>\n    </Segment>\n  )\n}\n","import React, { Component } from \"react\"\nimport \"./App.css\"\nimport { JobsList } from \"./Components/JobList/JobsList\"\nimport { SearchBox } from \"./Components/SearchBox/SearchBox\"\nimport { Loader, Dimmer } from \"semantic-ui-react\"\n\n// const api = \"http://localhost:9090/jobs\"\n\nconst proxy = \"https://cors-anywhere.herokuapp.com/\"\nconst api = `${proxy}https://jobs.github.com/positions.json`\n\nclass App extends Component {\n  state = {\n    error: null,\n    vacanciesList: [],\n    searchPosition: \"\"\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(api)\n      console.log(response)\n     \n      const jobList = await response.json()\n      console.log(jobList)\n      this.setState({ vacanciesList: jobList })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  handleSearch = event => {\n    this.setState({ searchPosition: event.target.value })\n  }\n\n  render() {\n    const { vacanciesList, searchPosition } = this.state\n    const filterJobs = vacanciesList.filter(job =>\n      job.title.toLowerCase().includes(searchPosition.toLowerCase())\n    )\n    return (\n      <div>\n        <SearchBox\n          handleSearch={this.handleSearch}\n          placeholder=\"Search for position\"\n        />\n        {!vacanciesList.length ? (\n          <Dimmer active>\n            <Loader size=\"massive\">Loading</Loader>\n          </Dimmer>\n        ) : (\n          <div className=\"Jobs\">\n            <JobsList vacancies={filterJobs} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}